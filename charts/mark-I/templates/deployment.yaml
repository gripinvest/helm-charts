{{- if eq .Values.type  "Deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mark.fullname" . }}
  labels:
    {{- include "mark.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount | default 1}}
  selector:
    matchLabels:
      {{- include "mark.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mark.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.persistence.enabled .Values.secrets .Values.configmaps }}
      volumes:
        {{- include "mark.combinedVolumes" . | default "" |nindent 8 }}
      {{- end }}
      restartPolicy: {{ .Values.restartPolicy | default "Always" }}
      serviceAccountName: {{ include "mark.serviceAccountName" . }}
      {{- if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.image.name | default .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.extraEnv }}
          env:
            {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
          {{- end }}

          {{- if or .Values.persistence.enabled .Values.secrets .Values.configmaps}}
          volumeMounts:
          {{- include "mark.mainContainerCombinedVolumeMounts" . | nindent 10 }}
          {{- end }}

          {{- if include "mark.mainContainerCombinedEnvFrom" . }}
          envFrom:
          {{- include "mark.mainContainerCombinedEnvFrom" . | nindent 10 }}
          {{- end }}

          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP

          {{- $lp := .Values.livenessProbe }}
          livenessProbe:
            {{- if eq $lp.probeType "httpGet" }}
            httpGet:
              path: {{ $lp.path }}
              port: {{ .Values.service.containerPort }}
              scheme: {{ $lp.scheme | default "HTTP" }}
            {{- else if eq $lp.probeType "tcpSocket" }}
            tcpSocket:
              port: {{ .Values.service.containerPort }}
            {{- else if eq $lp.probeType "exec" }}
            exec:
              command:
              {{ toYaml $lp.command}}
            {{- end }}
            initialDelaySeconds: {{ $lp.initialDelaySeconds }}
            timeoutSeconds: {{ $lp.timeoutSeconds }}
            periodSeconds: {{ $lp.periodSeconds }}
            failureThreshold: {{ $lp.failureThreshold }}

          {{- $rp := .Values.readinessProbe }}
          readinessProbe:
            {{- if eq $rp.probeType "httpGet" }}
            httpGet:
              path: {{ $rp.path }}
              scheme: {{ $rp.scheme }}
              port: {{ .Values.service.containerPort | default "HTTP" }}
            {{- else if eq $rp.probeType "tcpSocket" }}
            tcpSocket:
              port: {{ .Values.service.containerPort }}
            {{- else if eq $rp.probeType "exec" }}
            exec:
              command:
              {{ toYaml $rp.command }}
            {{- end }}
            initialDelaySeconds: {{ $rp.initialDelaySeconds }}
            timeoutSeconds: {{ $rp.timeoutSeconds }}
            periodSeconds: {{ $rp.periodSeconds }}
            failureThreshold: {{ $rp.failureThreshold }}

          {{- if .Values.startupProbe }}
          startupProbe:
            {{ toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}

          resources:
            {{- toYaml .Values.resources | default (dict) | nindent 12 }}

      {{- if and .Values.additionalContainers }}
      {{- range $k, $v := $.Values.additionalContainers }}

        - name: {{ $v.name }}
          image: {{ $v.image }}
          imagePullPolicy: {{ $v.imagePullPolicy | default "IfNotPresent" }}

          {{- if $v.securityContext }}
          securityContext:
            {{- toYaml $v.securityContext | nindent 12 }}
          {{- end }}

          {{- if $v.env }}
          env:
            {{- range $key, $value := $v.env }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
          {{- end }}

          {{- if $v.volumeMounts }}
          volumeMounts:
          {{- toYaml $v.volumeMounts | nindent 10 }}
          {{- end }}

          {{- if $v.envFrom }}
          envFrom:
          {{- toYaml $v.envFrom | nindent 10 }}
          {{- end }}

          {{- if $v.containerPort }}
          ports:
            - name: http
              containerPort: {{ $v.containerPort }}
              protocol: TCP
          {{- end }}

          {{- if $v.livenessProbe }}
          {{- $lp := $v.livenessProbe }}
          livenessProbe:
            {{- if eq $lp.probeType "httpGet" }}
            httpGet:
              path: {{ $lp.path }}
              port: {{ $v.containerPort }}
              scheme: {{ $lp.scheme | default "HTTP" }}
            {{- else if eq $lp.probeType "tcpSocket" }}
            tcpSocket:
              port: {{ $v.containerPort }}
            {{- else if eq $lp.probeType "exec" }}
            exec:
              command:
              {{ toYaml $lp.command}}
            {{- end }}
            initialDelaySeconds: {{ $lp.initialDelaySeconds }}
            timeoutSeconds: {{ $lp.timeoutSeconds }}
            periodSeconds: {{ $lp.periodSeconds }}
            failureThreshold: {{ $lp.failureThreshold }}
          {{- end }}

          {{- if $v.readinessProbe }}
          {{- $rp := $v.readinessProbe }}
          readinessProbe:
            {{- if eq $rp.probeType "httpGet" }}
            httpGet:
              path: {{ $rp.path }}
              scheme: {{ $rp.scheme }}
              port: {{ $v.containerPort | default "HTTP" }}
            {{- else if eq $rp.probeType "tcpSocket" }}
            tcpSocket:
              port: {{ $v.containerPort }}
            {{- else if eq $rp.probeType "exec" }}
            exec:
              command:
              {{ toYaml $rp.command }}
            {{- end }}
            initialDelaySeconds: {{ $rp.initialDelaySeconds }}
            timeoutSeconds: {{ $rp.timeoutSeconds }}
            periodSeconds: {{ $rp.periodSeconds }}
            failureThreshold: {{ $rp.failureThreshold }}
          {{- end }}

          {{- if $v.startupProbe }}
          startupProbe:
            {{ toYaml $v.startupProbe | nindent 12 }}
          {{- end }}
          
          {{- if $v.resources }}
          resources:
            {{- toYaml $v.resources | default (dict) | nindent 12 }}
          {{- end }}

      {{- end }}
      {{- end }}

      {{- if .Values.initContainer }}
      initContainers:
        {{- $initContainer := .Values.initContainer.image }}
        - name: {{ $initContainer.name | default .Chart.Name  }}
          image: "{{ $initContainer.repository }}:{{ $initContainer.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ $initContainer.pullPolicy }}

          {{- if and .Values.initContainer.command (gt (len .Values.initContainer.command) 0) }}
          command:
          {{ range .Values.initContainer.command }}
          - {{ . | quote }}
          {{- end }}
          {{- end }}

          {{- if and .Values.initContainer.args (gt (len .Values.initContainer.args) 0) }}
          args:
          {{ range .Values.initContainer.command }}
          - {{ . | quote }}
          {{- end }}
          {{- end }}

          envFrom: {{ include "mark.initContainerCombinedEnvFrom" . | default "" | nindent 10 }}
          {{- if .Values.initContainer.extraEnv }}
          env:
            {{- range $key, $value := .Values.initContainer.extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
          {{- end }}

          {{- if or .Values.persistence.enabled .Values.secrets .Values.configmaps}}
          volumeMounts:
          {{- include "mark.initContainerCombinedVolumeMounts" . | default (dict) | nindent 10 }}
          {{- end }}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
